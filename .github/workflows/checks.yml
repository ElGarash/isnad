name: Test, Lint, and Typecheck

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install Python dependencies
        run: uv sync

      - name: Cache Database
        id: cache-db
        uses: actions/cache@v4
        with:
          path: data/sqlite.db
          key: ${{ runner.os }}-db-${{ hashFiles('data/**', 'scripts/gen_db.py') }}
          restore-keys: |
            ${{ runner.os }}-db-

      - name: Generate Database
        if: steps.cache-db.outputs.cache-hit != 'true'
        run: uv run poe gen-db

      - name: Setup Bun Runtime
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
            path: |
                ~/.bun/install/cache
                ${{ github.workspace }}/.next/cache
            # Generate a new cache whenever packages or source files change.
            key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
            # If source files changed but packages didn't, rebuild from a prior cache.
            restore-keys: |
                ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-

      - name: Install bun dependencies
        run: bun install --dev

      - name: Typecheck
        run: bun type-check

      - name: Run tests
        run: bun test

      - name: Lint
        run: bun lint
