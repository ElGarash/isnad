# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: 'Deployment'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
            # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
            path: |
                ~/.bun/install/cache
                ${{ github.workspace }}/.next/cache
            # Generate a new cache whenever packages or source files change.
            key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
            # If source files changed but packages didn't, rebuild from a prior cache.
            restore-keys: |
                ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install Python dependencies
        run: uv sync

      - name: Generate Database
        run: uv run poe gen-db
      
      - run: bun install
      
      - run: bun run build

      - name: Deploy to Cloudflare Pages
        uses: andykenward/github-actions-cloudflare-pages@v2.3.2
        id: pages
        with:
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare-project-name: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
          directory: out
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
